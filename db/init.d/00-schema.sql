-- Create tables
-- Users table. Use INTEGER for id for conciseness at cost of distributed systems.
CREATE TABLE IF NOT EXISTS users (
    id              INTEGER       PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 1000),
    email           VARCHAR(100) UNIQUE NOT NULL,
    username        VARCHAR(50),
    created_at      TIMESTAMPTZ  DEFAULT CURRENT_TIMESTAMP,
    is_active       BOOLEAN      DEFAULT TRUE
);

-- Passwords for locally authenticated users. OAuth users will not have passwords.
CREATE TABLE IF NOT EXISTS user_passwords (
    user_id         INTEGER      PRIMARY KEY REFERENCES users(id) ON DELETE CASCADE,
    password_hash   TEXT         NOT NULL, -- hashed password. Consider: BYTEA or BYTES
    updated_at      TIMESTAMPTZ  DEFAULT CURRENT_TIMESTAMP -- most recent update
);


-- OAuth authentication: a user may have multiple OAuth providers.
-- Todo: consider if you want to store access tokens or just the provider and user id.
-- Todo: can same OAuth credentials be used by multiple users? See UNIQUE constraints.
CREATE TABLE IF NOT EXISTS user_oauth (
    id              INTEGER     GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         INTEGER     REFERENCES users(id) ON DELETE CASCADE,
    provider        VARCHAR(50) NOT NULL, -- e.g., 'google', 'line'
    provider_userid VARCHAR(100) NOT NULL, -- unique id from provider
    -- Only store tokens and expiry if you need to use the OAuth provider's API after login
    -- for additional data or actions. Otherwise, just store provider and user id.
    access_token    TEXT,
    refresh_token   TEXT,
    expires_at      TIMESTAMPTZ,
    created_at      TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (provider, provider_userid), -- can a user have multiple accounts with the same provider?
    UNIQUE (user_id, provider) -- a user can only have one account per provider
);

-- Data sources (e.g., water meter, power meter, odometer, PM5 sensor)
CREATE TABLE IF NOT EXISTS data_sources (
    id             INTEGER       PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name           TEXT          NOT NULL,
    description    TEXT,
    metrics        JSONB         NOT NULL,
    created_at     TIMESTAMPTZ   DEFAULT CURRENT_TIMESTAMP,
    created_by     INTEGER       REFERENCES users(id) ON DELETE SET NULL
);

-- Measurements table. A time-based reading of the value of a data source.
CREATE TABLE IF NOT EXISTS data_entries (
    id             UUID        PRIMARY KEY DEFAULT gen_random_uuid(),
    source_id      INTEGER     REFERENCES data_sources(id) ON DELETE CASCADE,
    values         JSONB       NOT NULL,
    created_at     TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    created_by     INTEGER     REFERENCES users(id) ON DELETE SET NULL -- include for audit trail?
);

-- Optional: index for faster query by data source id + timestamp
CREATE INDEX IF NOT EXISTS idx_data_entries_source_id_created_at
       ON data_entries(data_source_id, created_at); 

