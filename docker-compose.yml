# version: '3.9'
services:
  backend:
    build: ./backend
    # Specifying a volume mount-binds ./backend/app (host dir) to /app/app (in container).
    # This means that changes to code in "app" are immediately reflected in the running container.
    # Useful for development if Dockerfile also includes the "--reload" option in CMD.
    # This avoids mounting other directories (backend/tests, backend/experiments)
    # in the container. 
    volumes:
      - ./backend/app:/app/app
    ports:
      - "8000:8000"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3


  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"

  db:
    image: postgres:16     # Use PostgreSQL 16 for UUIDv7 support
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      # bind mount instructs Docker to copy a file from host to container
      - db_data:/var/lib/postgresql/data
      - ./db/init.d:/docker-entrypoint-initdb.d

volumes:
  db_data:

